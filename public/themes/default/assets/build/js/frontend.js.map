{"version":3,"sources":["app.js","mainController.js","shotsController.js","ovalController.js","exploreController.js","designersController.js","profileController.js","shot.js","shots.js","designers.js","request.js","findbyname.js","linkfy.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"frontend.js","sourcesContent":["/*\r\n |--------------------------------------------------------------------------\r\n | Main Application Bootstrap File\r\n |--------------------------------------------------------------------------\r\n |\r\n | This File holds all important configurations and main application module\r\n | without this file the whole app will not work. Main app module is declared\r\n | here and modules needed by our app.\r\n |\r\n |*/\r\n\r\n/*!\r\n *\r\n *  Web Starter Kit\r\n *  Copyright 2015 Google Inc. All rights reserved.\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *    https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License\r\n *\r\n */\r\n/* eslint-env browser */\r\n(function() {\r\n  'use strict';\r\n\r\n  // Check to make sure service workers are supported in the current browser,\r\n  // and that the current page is accessed from a secure origin. Using a\r\n  // service worker from an insecure origin will trigger JS console errors. See\r\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\r\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n    );\r\n\r\n  if ('serviceWorker' in navigator &&\r\n      (window.location.protocol === 'https:' || isLocalhost)) {\r\n    navigator.serviceWorker.register('/service-worker.js')\r\n    .then(function(registration) {\r\n      // updatefound is fired if service-worker.js changes.\r\n      registration.onupdatefound = function() {\r\n        // updatefound is also fired the very first time the SW is installed,\r\n        // and there's no need to prompt for a reload at that point.\r\n        // So check here to see if the page is already controlled,\r\n        // i.e. whether there's an existing service worker.\r\n        if (navigator.serviceWorker.controller) {\r\n          // The updatefound event implies that registration.installing is set:\r\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\r\n          var installingWorker = registration.installing;\r\n\r\n          installingWorker.onstatechange = function() {\r\n            switch (installingWorker.state) {\r\n              case 'installed':\r\n                // At this point, the old content will have been purged and the\r\n                // fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in the page's interface.\r\n                break;\r\n\r\n              case 'redundant':\r\n                throw new Error('The installing ' +\r\n                                'service worker became redundant.');\r\n\r\n              default:\r\n                // Ignore\r\n            }\r\n          };\r\n        }\r\n      };\r\n    }).catch(function(e) {\r\n      console.error('Error during service worker registration:', e);\r\n    });\r\n  }\r\n\r\n  // Your custom JavaScript goes here\r\n\r\n})();\r\n\r\n\r\n/**\r\n * App module is declared here.\r\n *\r\n * @var app\r\n */\r\nvar app = angular.module('app', ['ngAnimate', 'ngMessages', 'ngSanitize', 'ui.select',\r\n                                'ngDialog', 'angularGrid', 'pusher-angular', \r\n                                'slickCarousel','ngMap']);\r\n\r\n/**\r\n * Path to {Angular} Templates\r\n\r\n * @type {string}\r\n */\r\nvar template_path = '/themes/default/views/segments/';\r\n\r\n/**\r\n * Configurations are declared here.\r\n */\r\napp.config(function (ngDialogProvider) {\r\n\r\n    //force dialog reload.\r\n    ngDialogProvider.setForceHtmlReload(true);\r\n\r\n});\r\n\r\n","/*\n |--------------------------------------------------------------------------\n | Application Main Class\n |--------------------------------------------------------------------------\n |\n | This is mostly responsible for loading our apps direct methods and\n | Linking with other classes. So Our app communicates with other modules\n | through here. If disabled, the app wont be able to do any work.\n |\n */\n\n    'use strict';\n    app.controller(\"MainController\", [\"$scope\", \"ngDialog\", \"shotFactory\", \"$pusher\", \"$rootScope\",\n                            function($scope, ngDialog, shotFactory, $pusher, $rootScope) {\n\n        /**\n         * State of the App\n         * @type {boolean}\n         */\n        $scope.loading = true;\n\n        /**\n         * Toggle Sidebar\n         * @type {boolean}\n         */\n        $scope.toggle = false;\n\n        /**\n         * Initialize pusher and store ref in root\n          * @type {Pusher}\n         */\n        var client = new Pusher('67b6f9a2b88b9350c8fa');\n        $rootScope.pusher = $pusher(client);\n\n        // we should look into this\n        $scope.links = shotFactory.getParmalinks();\n\n        /*****************************************************************************\n         *\n         * Methods for Event Listeners.\n         *\n         ****************************************************************************/\n\n        /**\n         * When the app is loaded this will fire ->*\n         * @return {boolean}\n         */\n        $scope.$on('AppIsLoaded', function (event, data) {\n            return $scope.loading = false;\n        });\n\n        /*****************************************************************************\n         *\n         * Methods for dealing with the model\n         *\n         ****************************************************************************/\n\n        /**\n         * Toggle sidebar method\n         */\n        $scope.toggleSidebar = function () {\n            $scope.toggle = !$scope.toggle;\n        };\n\n\n        /*****************************************************************************\n         *\n         * Methods for dealing dialogs\n         *\n         ****************************************************************************/\n        /**\n         * Opens Shot Dialog View\n         * @param $name\n         */\n        $scope.open = function ($name) {\n\n            if(window.innerWidth < 430){window.location = '/shot/'+$name;return;}\n\n            var dialogScope = $scope.$new();\n            dialogScope.name = $name;\n            history.pushState({}, '', '/shot/'+$name);\n\n            ngDialog.open({\n                closeByNavigation: true,\n                cache:false,\n                template: template_path + 'shots_overlay.html', className: 'mt-shots-overlay' ,\n                controller: 'ovalController',\n                scope: dialogScope,\n                preCloseCallback: function() {\n                    history.back();\n                    return true;\n                }\n            });\n\n        };\n\n        /**\n         * Open Shot Poster Dialog\n         */\n       $scope.showShotPoster = function(){\n\n            ngDialog.open({\n                closeByNavigation: true,\n                cache:false,\n                template: template_path + 'shot-upload.html', className: 'mt-large-overlay' ,\n                controller: 'shotsController'\n            }); //Dialog\n    }\n\n\n    }]); //End","/*\n |--------------------------------------------------------------------------\n | Shots Controller Class\n |--------------------------------------------------------------------------\n |\n | This is mostly responsible for loading our apps direct methods and\n | Linking with other classes. So Our app communicates with other modules\n | through here. If disabled, the app wont be able to do any work.\n |\n */\n\n    'use strict';\n\n\tapp.controller(\"shotsController\", [\"$scope\", \"ngDialog\",\"$window\",\n                    \"shotsFactory\", \"$timeout\",\"$filter\",\n                    \"$log\",\"$Request\", \"$rootScope\",\n        function($scope, ngDialog, $window, shotsFactory, $timeout, $filter, $log, $Request, $rootScope) {\n\n            /**\n             * shots items will be stored here.\n             * @type {Array}\n             */\n            $scope.shots = [];\n\n            /**\n             * For async operations.\n             * @type {boolean}\n             */\n            $scope.busy = false;\n\n            /**\n             * Page URL\n             * @type {string}\n             */\n            $scope.after = '/?page=1';\n\n            /**\n             * shots per page\n             * @type {number}\n             */\n            $scope.per_page = 0;\n\n            var pathArray = window.location.pathname.split( '/' );\n\n            var $slug = pathArray[2] ? pathArray[2] : 'trending',\n                $cat = $Request.search('cat') || null,\n                $page = $Request.search('page', $scope.after);\n\n        /*****************************************************************************\n         *\n         * Methods for Event Listeners.\n         *\n         ****************************************************************************/\n\n\n            /**\n             * Subscribe pusher to shotschannel\n             */\n            $rootScope.pusher.subscribe('shotsChannel');\n\n            /**\n             * Icrement Views when a shot is viewed\n             */\n            $rootScope.pusher.bind('shotWasViewed',\n                function(data) {\n                    var $shot = $filter('findByName')($scope.shots, data.name);\n                    if($shot){\n                        $shot.views++;\n                    }\n                }\n            );\n\n            /*****************************************************************************\n             *\n             * Methods to update/refresh the UI\n             *\n             ****************************************************************************/\n            /**\n             * Loads more shots from server\n             */\n            $scope.updateShots = function($repo){\n                if ($scope.busy || !$page) return;\n                if($page==1){\n                    // The shots are available now.\n                    $scope.$emit('AppIsLoaded', 'done');\n                }\n                $scope.busy = true;\n                $scope.getShots($repo, {cat: $cat, page:$page,sort:$slug});\n\n                if($page > 1){\n                    ga('send', {\n                        hitType: 'event',\n                        eventCategory: 'PaginatedContent',\n                        eventAction: 'scroll',\n                        eventLabel: 'Load More Shots'\n                    });\n                }\n\n            };\n\n            /**\n             * Like or unlike a shot\n             * @param $name\n             */\n            $scope.like = function($name) {\n                shotsFactory.like($name).then(function(response){\n                    toggleLike($name);\n                });\n            }\n            /*****************************************************************************\n             *\n             * Methods for dealing with the model\n             *\n             ****************************************************************************/\n\n            /**\n             * gets shots from storage.\n             *\n             * @param $sort\n             */\n            $scope.getShots = function($repo, $params){\n\n                shotsFactory.index($repo, $params).then(function(response){\n                    var items = response.data.response.shots.data;\n                    $scope.per_page = $scope.per_page +response.data.per_page;\n\n                    angular.forEach(items, function(value, key) {\n                        $scope.shots.push(value);\n                    });\n                    $scope.after = response.data.response.shots['nextPage'];\n                    $page = $Request.search('page', $scope.after);\n                    $scope.busy = false;\n                });\n            };\n\n            /**\n             * Toggle like\n             * @param $name\n             * @return {boolean}\n             */\n            var toggleLike = function($name){\n                    $shot = $filter('findByName')($scope.shots, $name);\n\n                  if($shot.likes.is_liked == true){\n                        $shot.likes.like_count--;\n                        return $shot.likes.is_liked = false;\n                  }\n                      $shot.likes.like_count++;\n                      return $shot.likes.is_liked = true;\n            }\n\n            \n\t\t}]);\n","\t'use strict';\r\n\r\n\tapp.controller(\"ovalController\", [\"$scope\",\"shotsFactory\", \"$timeout\",\r\n\r\n\t\tfunction($scope, shotsFactory, $timeout) {\r\n\t\t\t\r\n\t\t \t\t shotsFactory.show($scope.name).then(function(response){\r\n\t\t \t\t\t\t$scope.shot = response.data.response.data;\r\n\t\t \t\t});\r\n\r\n\t\t \t\t$timeout(function(){\r\n\t\t \t\t \tshotsFactory.viewed($scope.name);\r\n\t\t \t\t }, 1500);\r\n\t\t}\r\n\r\n\t\t\t]);\r\n\r\n\t\tapp.controller(\"shotController\", [\"$scope\",\"shotsFactory\", \"$timeout\",\"$window\",\r\n\r\n\t\tfunction($scope, shotsFactory, $timeout, $window) {\r\n\r\n\t\t\t\t\tvar $name = $window.location.href;\r\n\r\n\t\t\t\t\t$name = $name.substring($name.lastIndexOf('/')+1);\r\n\r\n\t\t\t \t\t$timeout(function(){\r\n\t\t\t \t\t \tshotsFactory.viewed($name);\r\n\t\t\t \t\t }, 1500);\r\n\t\t}\r\n\r\n\t\t\t]);","\t'use strict';\n\n\tapp.controller(\"exploreController\", [\"$scope\",\"shotsFactory\",\"ngDialog\",\n        function($scope, shotsFactory, ngDialog) {\n\n            $scope.sections = [];\n            $scope.busy = false;\n\n            // App is done loading\n            $scope.$emit('AppIsLoaded', 'done');\n\n            /**\n             * gets shots from storage.\n             *\n             * @param $sort\n             */\n            (function($params){\n\n                shotsFactory.explore($params).then(function(response){\n\n                    console.log(response);\n                    var items = response.data;\n\n                    angular.forEach(items, function(value, key) {\n                        $scope.sections.push(value.response);\n                    });\n\n                });\n            })();\n\n\n\t\t}]);\n","\t'use strict';\r\n\r\n\tapp.controller(\"designersController\", [\"$scope\",\"designersFactory\",\"NgMap\",\"$Request\",\"ngDialog\",\r\n\t\tfunction($scope, designersFactory, NgMap, $Request, ngDialog) {\r\n\r\n\t\t\t$scope.designers = [];\r\n\t\t\t$scope.busy = false;\r\n            $scope.after = '/?page=1';\r\n            $scope.per_page = 0;\r\n\r\n            // App is done loading\r\n            $scope.$emit('AppIsLoaded', 'done');\r\n\r\n\t\t\t//Google Map URL with API\r\n\t\t    $scope.googleMapsUrl = 'https://maps.google.com/maps/api/js?v=3.20&key=AIzaSyDMknbbjCbtZVr3Ga4n7Fnr1dJDr8lvZoA';\r\n\r\n\t\t    //Custom Map Styles\r\n\t\t    $scope.mapStyles=[{\"stylers\":[{\"hue\":\"#ff1a00\"},{\"invert_lightness\":true},{\"saturation\":-100},{\"lightness\":33},{\"gamma\":0.5}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2D333C\"}]}];\r\n\r\n\t\t\t//Slider configuration\r\n\t\t    $scope.slickConfig2 = {autoplay: true,infinite: true,autoplaySpeed: 5000,slidesToShow: 3,slidesToScroll: 1,method: {}};\r\n\r\n\t\t    var pathArray = window.location.pathname.split( '/' );\r\n\t\t    var $sort = pathArray[2] ? pathArray[2] : 'local',\r\n                $page = $Request.search('page', $scope.after);\r\n\r\n            /**\r\n             * gets Designers from storage.\r\n             *\r\n             * @param $sort\r\n             */\r\n            $scope.getDesigners = function($params){\r\n\r\n                designersFactory.index($params).then(function(response){\r\n\r\n                    var items = response.data.response.designers.data;\r\n                    $scope.per_page = $scope.per_page +response.data.per_page;\r\n\r\n                    angular.forEach(items, function(value, key) {\r\n                        $scope.designers.push(value);\r\n                    });\r\n\r\n                    $scope.after = response.data.response.designers['nextPage'];\r\n                    $page = $Request.search('page', $scope.after);\r\n                });\r\n            };\r\n\r\n\r\n            /**\r\n             * Loads more shots from server\r\n             */\r\n            $scope.updateDesigners = function($repo){\r\n                if ($scope.busy) return;\r\n                if(!$page) return;\r\n\r\n                $scope.busy = true;\r\n                $scope.getDesigners({page:$page, sort:$sort});\r\n                $scope.busy = false;\r\n\r\n                ga('send', {\r\n                  hitType: 'event',\r\n                  eventCategory: 'PaginatedContent',\r\n                  eventAction: 'scroll',\r\n                  eventLabel: 'Load More Designers'\r\n                });\r\n            };\r\n\r\n\r\n\t}]);    \r\n","'use strict';\r\n\r\napp.controller(\"profileController\", [\"$scope\",\"designersFactory\",\"NgMap\",\"$Request\",\r\n    function($scope, designersFactory, NgMap, $Request) {\r\n\r\n        $scope.shots = [];\r\n        $scope.busy = false;\r\n        $scope.$emit('AppIsLoaded', 'done');\r\n        $scope.after = '/?page=1';\r\n        $scope.per_page = 0;\r\n\r\n        var pathArray = window.location.pathname.split( '/' );\r\n        var $username = pathArray[1],\r\n            $page = $Request.search('page', $scope.after);\r\n\r\n        /**\r\n         * gets Designers from storage.\r\n         *\r\n         * @param $sort\r\n         */\r\n        $scope.getshots = function($username, $params){\r\n\r\n            designersFactory.shots($username, $params).then(function(response){\r\n\r\n                var items = response.data.response.shots.data;\r\n                $scope.per_page = $scope.per_page +response.data.per_page;\r\n\r\n                angular.forEach(items, function(value, key) {\r\n                    $scope.shots.push(value);\r\n                });\r\n\r\n                $scope.after = response.data.response.shots['nextPage'];\r\n                $page = $Request.search('page', $scope.after);\r\n                $scope.busy = false;\r\n            });\r\n        };\r\n\r\n\r\n        /**\r\n         * Loads more shots from server\r\n         */\r\n        $scope.updateShots = function(){\r\n            if ($scope.busy || !$page) return;\r\n            $scope.busy = true;\r\n            $scope.getshots($username, {page:$page});\r\n\r\n            if($page > 1){\r\n                ga('send', {\r\n                    hitType: 'event',\r\n                    eventCategory: 'PaginatedContent',\r\n                    eventAction: 'scroll',\r\n                    eventLabel: 'Load More Shots'\r\n                });\r\n            }\r\n\r\n        };\r\n\r\n\r\n    }]);\r\n","\tapp.factory('shotFactory', ['$http', function($http){\r\n\r\n\r\n\t\t\tthis.getParmalinks = function(){\r\n\t\t\t\tvar data = [\r\n\t\t\t\t\t{name:'Type', dropElements: [\r\n\r\n\t\t\t\t\t\t{link: '/explore/african-prints-shirts', text: 'Shirt'}, {link: '/explore/african-fashion-dress', text: 'Dresses'},\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-blazers', text: 'Blazers'}, {link: '/explore/african-fashion-outfits', text: 'Outfits'},\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-jackets', text: 'Jackets'}, {link: '/explore/african-fashion-prints-women', text: 'Women'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-pants', text: 'Pants'}, {link: '/explore/african-fashion-bikini', text: 'Bikini'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-swimwear', text: 'Swimwear'}, {link: '/explore/african-fashion-tops', text: 'Tops'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-skirts', text: 'Skirts'}, {link: '/explore/african-fashion-hijab', text: 'Hijab'},\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-mens', text: 'For Men'}, {link: '/explore/african-fashion-summer-wears', text: 'summer'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-shorts', text: 'Shorts'}, {link: '/explore/african-fashion-couples', text: 'Couples'}\r\n\t\t\t\t\t]},\r\n\r\n\t\t\t\t\t{name:'Style', dropElements: [\r\n\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-Pprints', text: 'Prints'}, {link: '/explore/african-fashion-classic-wears', text: 'Classic'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-modern', text: 'Modern'},\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-ankara', text: 'Ankara'}, {link: '/explore/african-prints-kitenge', text: 'Kitenge'},\r\n\t\t\t\t\t\t{link: '/explore/african-fashion-leather', text: 'Leather'}, {link: '/explore/african-fashion-ankara', text: 'Ankara'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-lace', text: 'Lace'}, {link: '/explore/african-fashion-dashiki', text: 'Dashiki'}\r\n\t\t\t\t\t]},\r\n\r\n\t\t\t\t\t{name:'Accessories', dropElements: [\r\n\r\n\t\t\t\t\t\t{link: '/explore/african-prints-necklace', text: 'Necklaces'}, {link: '/explore/african-prints-headwrap', text: 'Head wrap'}\r\n\t\t\t\t\t]},\r\n\r\n\t\t\t\t\t{name:'Occasional', dropElements: [\r\n\r\n\t\t\t\t\t\t{link: '/explore/african-prints-wedding', text: 'Wedding'}, {link: '/explore/african-prints-work-wears', text: 'work'},\r\n\t\t\t\t\t\t{link: '/explore/african-prints-party-wear', text: 'Party'}, {link: '/explore/african-prints-special', text: 'special'}\r\n\t\t\t\t\t]},\r\n\t\t\t\t];\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn this;\r\n\t}]);\r\n","app.factory('shotsFactory', ['$http', function($http){\r\n\r\n        this.items = [];\r\n        this.busy = false;\r\n        this.after = '';\r\n\r\n\r\n     this.index = function($resource, params){\r\n     \treturn $http.get('/api/v1/'+$resource, {params:params});\r\n     };\r\n\r\n        // will return object of a single shot\r\n    this.show = function (name) {\r\n        return $http.get(\"/api/v1/shots/\" + name);\r\n    };\r\n\r\n    this.viewed = function(name){\r\n        return $http.post(\"/api/v1/shot/viewed/\" + name);\r\n    };\r\n\r\n    this.explore = function(params){\r\n       return $http.get('/api/v1/explore/', {params:params});\r\n    };\r\n\r\n    this.like = function($name){\r\n       return $http.get('/api/v1/shot/'+$name+'/like');\r\n    };\r\n\r\n\r\n    return this;\r\n}]);\r\n","app.factory('designersFactory', ['$http', function($http){\r\n\r\n        this.items = [];\r\n        this.busy = false;\r\n        this.after = '';\r\n\r\n\r\n     this.index = function(params){\r\n     \treturn $http.get('/api/v1/designers', {params:params});\r\n     };\r\n\r\n    this.shots = function($username, params){\r\n        return $http.get('/api/v1/'+$username+'/shots', {params:params});\r\n    };\r\n\r\n\r\n\r\n    return this;\r\n}]);\r\n","\r\napp.service('$Request', function () {\r\n\t\r\n\t            //Move To Custom Helpers\r\n            this.search = function(name, url) {\r\n                if (!url) url = window.location.href;\r\n                name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n                var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n                    results = regex.exec(url);\r\n                if (!results) return null;\r\n                if (!results[2]) return '';\r\n                return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n            }\r\n\r\n            return this;\r\n\r\n});","app.filter('findByName', function() {\r\n\r\n    return function(input, name) {\r\n        var i=0, len=input.length;\r\n        for (; i<len; i++) {\r\n            var itemName = input[i].name;\r\n            if (itemName == name) {\r\n                return input[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n});","app.filter('linkfy',['$filter', '$sce',\r\n    function($filter, $sce) {\r\n        return function(text, target) {\r\n            if (!text) return text;\r\n\r\n            var replacedText = $filter('linky')(text, target);\r\n            var targetAttr = \"\";\r\n            if (angular.isDefined(target)) {\r\n                targetAttr = ' target=\"' + target + '\"';\r\n            }\r\n\r\n            // replace #hashtags\r\n            var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\r\n            replacedText = replacedText.replace(replacePattern1, '$1<a href=\"https://www.afrodapp.com/explore/$2\"' + targetAttr + '>#$2</a>');\r\n\r\n            // replace @mentions\r\n            var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\r\n            replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://www.afrodapp.com/$2\"' + targetAttr + '>@$2</a>');\r\n\r\n            $sce.trustAsHtml(replacedText);\r\n            return replacedText;\r\n        };\r\n    }\r\n]);"],"sourceRoot":"/source/"}